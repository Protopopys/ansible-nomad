---
# Вкл/Выкл использование downloader сервера (актуально если на удаленном хосте нет доступа к сети интернет или же количество хостов на которые необходимо доставить архив больше 1го)
use_downloader: true
# При использовании downloader в данную папку будет осуществлятся скачивание архива, в дальнейшем распространение архива на удаленные хосты осуществляется из данной папки downloader сервера.
downloader_source_folder: ~/DISTR
# Папка в которую будет осуществлена загрузка установочного архива
distribution_path: "/opt/DISTR"

### Package
# Устанавливаемая версия Nomad
nomad_version: v0.10.5
# Пакеты
nomad:
  # Список версий с параметрами (контрольная сумма архива,контрольная сумма бинарного файла, пряма ссылка в сети интернет)
  v0.10.5:
    # Прямая ссылка в сети интернет для возможноти скачать архив с nomad
    source_url: https://releases.hashicorp.com/nomad/0.10.5/nomad_0.10.5_linux_amd64.zip
    # Контрольная сумма скачаемого архива
    checksum_algorithm: "sha256"
    checksum: 970eae241a1fec77002baccfa768bab4b7b4a352000b9615d4246498cd830838
    binary_checksum: dbed4f351a5aa914c2d2a143858e5a5115e23532186e373cb51f932817e30da6

### System user and group
# Параметры создания пользователя
nomad_manage_user: true
nomad_manage_group: true
nomad_user: user
nomad_group: user
nomad_system: true
nomad_shell: /bin/false
nomad_ssh_key: false

# Конфигурационные параметры сервиса
## Параметры запуска сервиса
nomad_state: started
nomad_enabled: true

### Paths
# Папка на удаленном сервере куда будет осуществляться доставка конфигурационного файла
nomad_conf_dir: "/etc/nomad.d"
# Папка для данных
nomad_data_dir: "/DATA/nomad"
# Папка на удаленном сервере куда будет осуществляться доставка архива с дальнейшей распаковкой
nomad_bin_dir: "/opt/nomad/{{ nomad_version }}"


## Core
nomad_debug: false

### Nomad settings
nomad_datacenter: "dc1"
nomad_region: "global"
nomad_log_level: "INFO"
nomad_syslog_enable: true
nomad_node_name: "{{ inventory_hostname_short }}"
#nomad_node_role: both
#nomad_node_role: server
nomad_node_role: client
nomad_leave_on_terminate: true
nomad_leave_on_interrupt: false
nomad_disable_update_check: false

### Addresses
nomad_bind_address: "0.0.0.0"
nomad_advertise_address: "0.0.0.0"

### Servers
nomad_group_name: "nomad_instances"
nomad_servers: "\
  {% if not nomad_use_consul %}\
    {% set _nomad_servers = [] %}\
    {% for host in groups[nomad_group_name] %}\
      {% set _nomad_node_role = hostvars[host]['nomad_node_role'] | default('client', true) %}\
      {% if ( _nomad_node_role == 'server' or _nomad_node_role == 'both') %}\
        {% if _nomad_servers.append(host) %}{% endif %}\
      {% endif %}\
    {% endfor %}\
    {{ _nomad_servers }}\
    {% else %}\
    []\
  {% endif %}"

### Ports
nomad_ports_http: 4646
nomad_ports_rpc: 4647
nomad_ports_serf: 4648

### Consul
nomad_use_consul: false
nomad_consul_address: "localhost:8500"
nomad_consul_token: ""
nomad_consul_servers_service_name: "nomad-servers"
nomad_consul_clients_service_name: "nomad-clients"
nomad_consul_tags: {}
nomad_consul_auto_advertise: true
nomad_consul_server_auto_join: true
nomad_consul_client_auto_join: true

### ACLs
nomad_acl_enabled: true
nomad_acl_token_ttl: "30s"
nomad_acl_policy_ttl: "30s"
nomad_acl_replication_token: ""

### Vault
nomad_vault_enabled: "{{ lookup('env', 'NOMAD_VAULT_ENABLED') | default('no', true) }}"
nomad_vault_address: "0.0.0.0"
nomad_vault_allow_unauthenticated: true
nomad_vault_create_from_role: ""
nomad_vault_task_token_ttl: ""
nomad_vault_ca_file: ""
nomad_vault_ca_path: ""
nomad_vault_cert_file: ""
nomad_vault_key_file: ""
nomad_vault_tls_server_name: ""
nomad_vault_tls_skip_verify: false
nomad_vault_token: ""

### Tls
nomad_ca_file: ""
nomad_cert_file: ""
nomad_key_file: ""
nomad_verify_server_hostname: true
nomad_verify_https_client: true
